# This file was originally autogenerated by maturin v1.4.0, but has been
# modified by hand.
name: Python Publish

on:
  release:
    types:
      - published

permissions:
  contents: read

jobs:
  linux:
    runs-on: ubuntu-latest
    if: contains(github.event.release.name, 'Python')
    strategy:
      matrix:
        # can add s390x and ppc64le back in if anyone ever wants to use them
        target: [ x86_64, x86, aarch64, armv7 ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Cargo Config
        run: mv .cargo/config_for_publishing.toml .cargo/config.toml
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --interpreter 3.9 3.10 3.11 3.12 3.13 --manifest-path pco_python/Cargo.toml
          sccache: 'true'
          manylinux: auto
          rust-toolchain: nightly
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.target }}
          path: dist

  windows:
    runs-on: windows-latest
    if: contains(github.event.release.name, 'Python')
    strategy:
      matrix:
        target: [ x64 ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
          architecture: ${{ matrix.target }}
      - name: Cargo Config
        run: mv -Force .cargo/config_for_publishing.toml .cargo/config.toml
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --interpreter 3.9 3.10 3.11 3.12 3.13 --manifest-path pco_python/Cargo.toml
          sccache: 'true'
          rust-toolchain: nightly
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.target }}
          path: dist

  macos:
    runs-on: macos-latest
    if: contains(github.event.release.name, 'Python')
    strategy:
      matrix:
        target: [ x86_64, aarch64 ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Cargo Config
        run: mv .cargo/config_for_publishing.toml .cargo/config.toml
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --interpreter 3.9 3.10 3.11 3.12 3.13 --manifest-path pco_python/Cargo.toml
          sccache: 'true'
          rust-toolchain: nightly
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.target }}
          path: dist

  sdist:
    runs-on: ubuntu-latest
    if: contains(github.event.release.name, 'Python')
    steps:
      - uses: actions/checkout@v4
      - name: Set Rust version
        run: rustup override set nightly
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist --manifest-path pco_python/Cargo.toml
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: contains(github.event.release.name, 'Python')
    needs: [ linux, windows, macos, sdist ]
    environment:
      name: pypi
      url: https://pypi.org/p/pcodec
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing
    steps:
      - uses: actions/download-artifact@v4
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        with:
          command: upload
          args: --non-interactive --skip-existing wheels-*/*
